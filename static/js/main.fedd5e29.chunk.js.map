{"version":3,"sources":["i18n.ts","data.ts","mediaQuery.ts","component/LanguageSwitch.tsx","component/Header.tsx","component/OnOffToggle.tsx","component/RadioStyleSelector.tsx","util/range.ts","component/DropDownMenu.tsx","component/Inputs.tsx","rpCalculator.ts","component/Breakdown.tsx","component/TwoDTableFormat.tsx","component/Report.tsx","component/Output.tsx","util/useConvertedObservable.ts","component/App.tsx","AppRoot.tsx","reportWebVitals.ts","index.tsx"],"names":["i18n","use","initReactI18next","LanguageDetector","init","resources","interpolation","escapeValue","calcRPFromPlacement","placement","calcRPPerKill","RP_FROM_KILL_CAP","Tiers","ENTRY_COST","Bronze","Silver","Gold","Platinum","Diamond","Master","isLarge","facepaint","LanguageSwitch","useTranslation","languageList","currentLg","language","languageListInOrder","filter","lg","concat","map","index","code","name","href","onClick","lng","changeLanguage","Header","t","css","mq","width","display","textAlign","verticalAlign","marginTop","marginRight","OnOffToggle","label","state","type","checked","get","onChange","action","set","RadioStyleSelectorOption","selected","borderWidth","borderStyle","borderColor","backgroundColor","marginLeft","RadioStyleSelector","list","itemLabel","item","range","from","to","arr","i","push","DropDownMenu","e","parseInt","target","value","findIndex","Inputs","killPoint","tier","lostForgiveness","Selector","useMediaQuery","a","String","calcRP","result","rp","calcRPFromKill","Math","max","rpPerKill","min","Breakdown","props","rpFromPlacement","rpFromKill","lostForgivenessRP","KABreakDown","Formula","rawKARP","TwoDTableFormat","axises","xAxis","x","yAxis","y","cell","caption","Table","Tr","rowSpan","colSpan","values","length","header","j","Th","undefined","Td","Cell","observer","pageState","useContext","PageStateContext","handleClick","ColumnHeader","scope","RowHeader","Report","Output","totalRP","useSyncedBox","accessor","useMemo","createContext","App","observable","Provider","AppRoot","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fedd5e29.chunk.js","sourcesContent":["import i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\nimport LanguageDetector from \"i18next-browser-languagedetector\";\nimport resources from \"./translations.json\";\n\ni18n\n  .use(initReactI18next)\n  .use(LanguageDetector)\n  .init({\n    resources,\n    interpolation: {\n      escapeValue: false,\n    },\n  });\n\nexport default i18n;\n","export function calcRPFromPlacement(\n  placement: number\n): number {\n  const RP: { [p: number]: number } = {\n    1: 125,\n    2: 95,\n    3: 70,\n    4: 55,\n    5: 45,\n    6: 30,\n    7: 20,\n    8: 20,\n    9: 10,\n    10: 10,\n    11: 5,\n    12: 5,\n    13: 5,\n  };\n  return RP[placement] ?? 0;\n}\nexport function calcRPPerKill(placement: number): number {\n  const RP: { [p: number]: number } = {\n    1: 15,\n    2: 11,\n    3: 8,\n    4: 5,\n    5: 5,\n    6: 1,\n    7: 1,\n    8: 1,\n    9: 1,\n    10: 1,\n  };\n  return (RP[placement] ?? 0) + 10;\n}\nexport const RP_FROM_KILL_CAP = 125;\nexport const Tiers = [\n  \"Bronze\",\n  \"Silver\",\n  \"Gold\",\n  \"Platinum\",\n  \"Diamond\",\n  \"Master\",\n  \"Apex Predator\",\n] as const;\nexport type Tier = typeof Tiers[number];\nexport const ENTRY_COST = {\n  Bronze: 0,\n  Silver: 12,\n  Gold: 24,\n  Platinum: 36,\n  Diamond: 48,\n  Master: 60,\n  \"Apex Predator\": 60,\n};\n","import facepaint from \"facepaint\";\n\nexport const isLarge = \"screen and (min-width: 600px)\";\nexport default facepaint([\"@media \" + isLarge]);\n","/** @jsxImportSource @emotion/react */\nimport { jsx } from \"@emotion/react/macro\";\nimport { Fragment } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\nexport default function LanguageSwitch() {\n  const { i18n } = useTranslation();\n  const changeLanguage = (lng: string) => {\n    i18n.changeLanguage(lng);\n  };\n  const languageList = [\n    [\"ja\", \"日本語\"],\n    [\"en\", \"English\"],\n  ];\n  const currentLg = i18n.language;\n  const languageListInOrder = languageList\n    .filter((lg) => lg[0] === currentLg)\n    .concat(\n      languageList.filter((lg) => lg[0] !== currentLg)\n    );\n  return (\n    <>\n      {languageListInOrder.map(([code, name], index) => (\n        <Fragment key={index}>\n          {index !== 0 && \"/\"}\n          <a\n            href=\"#\"\n            onClick={() => {\n              changeLanguage(code);\n            }}\n          >\n            {name}\n          </a>\n        </Fragment>\n      ))}\n    </>\n  );\n}\n","/** @jsxImportSource @emotion/react */\nimport { jsx } from \"@emotion/react/macro\";\nimport { useTranslation } from \"react-i18next\";\nimport mq from \"../mediaQuery\";\nimport LanguageSwitch from \"./LanguageSwitch\";\n\nexport function Header() {\n  const { t } = useTranslation();\n  return (\n    <header>\n      <h1\n        css={mq({\n          width: [\"100%\", \"80%\"],\n          display: \"inline-block\",\n        })}\n      >\n        {t(\"Apex Legends RP calculator\")}\n      </h1>\n      <div\n        css={mq({\n          width: [\"100%\", \"calc(20% - 24px)\"],\n          display: \"inline-block\",\n          textAlign: \"end\",\n          verticalAlign: \"top\",\n          marginTop: [0, 24],\n          marginRight: 24,\n        })}\n      >\n        <LanguageSwitch />\n      </div>\n    </header>\n  );\n}\n","import { action, IObservableValue } from \"mobx\";\nimport { Observer } from \"mobx-react-lite\";\n\ntype Props = {\n  label: string;\n  state: IObservableValue<boolean>;\n};\nexport function OnOffToggle({ label, state }: Props) {\n  return (\n    <label>\n      {label}{\" \"}\n      <Observer>\n        {() => (\n          <input\n            type=\"checkbox\"\n            checked={state.get()}\n            onChange={action(() => state.set(!state.get()))}\n          />\n        )}\n      </Observer>\n    </label>\n  );\n}\n","/** @jsxImportSource @emotion/react */\nimport { jsx } from \"@emotion/react/macro\";\nimport { action, IObservableValue } from \"mobx\";\nimport { Observer } from \"mobx-react-lite\";\n\nexport type RadioStyleSelectorProps<Item> = {\n  label: string;\n  list: readonly Item[];\n  selected: IObservableValue<Item>;\n  itemLabel: (i: Item) => string;\n};\ntype RadioStyleSelectorOptionProps = {\n  onClick: () => void;\n  selected: boolean;\n  label: string;\n};\n\nexport function RadioStyleSelectorOption({\n  onClick,\n  selected,\n  label,\n}: RadioStyleSelectorOptionProps) {\n  return (\n    <button\n      onClick={onClick}\n      css={{\n        borderWidth: 1,\n        borderStyle: \"solid\",\n        borderColor: selected ? \"#000000\" : \"#efefef\",\n        backgroundColor: \"#efefef\",\n        marginLeft: 0,\n      }}\n    >\n      {label}\n    </button>\n  );\n}\nexport function RadioStyleSelector<Item extends any>({\n  label,\n  selected,\n  list,\n  itemLabel,\n}: RadioStyleSelectorProps<Item>) {\n  return (\n    <label>\n      {label}{\" \"}\n      <div>\n        {list.map((item, index) => (\n          <Observer key={index}>\n            {() => (\n              <RadioStyleSelectorOption\n                onClick={action(() => selected.set(item))}\n                selected={selected.get() === item}\n                label={itemLabel(item)}\n              />\n            )}\n          </Observer>\n        ))}\n      </div>\n    </label>\n  );\n}\n","export function range(from: number, to: number) {\n  const arr = [];\n  if (from <= to)\n    for (let i = from; i <= to; i++) arr.push(i);\n  else for (let i = from; i >= to; i--) arr.push(i);\n  return arr;\n}\n","/** @jsxImportSource @emotion/react */\nimport { jsx } from \"@emotion/react/macro\";\nimport { action, IObservableValue } from \"mobx\";\n\ntype Props<Item> = {\n  label: string;\n  list: readonly Item[];\n  selected: IObservableValue<Item>;\n  itemLabel: (i: Item) => string;\n};\nexport function DropDownMenu<Item>({\n  label,\n  selected,\n  list,\n  itemLabel,\n}: Props<Item>) {\n  return (\n    <label>\n      {label}{\" \"}\n      <select\n        onChange={action((e) => {\n          selected.set(list[parseInt(e.target.value, 10)]);\n        })}\n        value={list.findIndex(\n          (item) => item === selected.get()\n        )}\n      >\n        {list.map((item, index) => (\n          <option value={index} key={index}>\n            {itemLabel(item)}\n          </option>\n        ))}\n      </select>\n    </label>\n  );\n}\n","import { useTranslation } from \"react-i18next\";\nimport { OnOffToggle } from \"./OnOffToggle\";\nimport { RadioStyleSelector } from \"./RadioStyleSelector\";\nimport { Tier, Tiers } from \"../data\";\nimport { range } from \"../util/range\";\nimport { isLarge } from \"../mediaQuery\";\nimport { DropDownMenu } from \"./DropDownMenu\";\nimport { useMediaQuery } from \"@react-hook/media-query\";\nimport { IObservableValue } from \"mobx\";\n\nexport function Inputs({\n  placement,\n  killPoint,\n  tier,\n  lostForgiveness,\n}: {\n  placement: IObservableValue<number>;\n  killPoint: IObservableValue<number>;\n  tier: IObservableValue<Tier>;\n  lostForgiveness: IObservableValue<boolean>;\n}) {\n  const { t } = useTranslation();\n  const Selector = useMediaQuery(isLarge)\n    ? RadioStyleSelector\n    : DropDownMenu;\n  return (\n    <div>\n      <div>\n        <Selector\n          selected={placement}\n          label={t(\"Placement\")}\n          list={range(20, 1)}\n          itemLabel={(a) => String(a)}\n        />\n      </div>\n      <div>\n        <Selector\n          selected={killPoint}\n          label={t(\"Kill/Assist Points\")}\n          list={range(0, 13)}\n          itemLabel={(a) => String(a)}\n        />\n      </div>\n      <div>\n        <Selector\n          selected={tier}\n          label={t(\"Tier\")}\n          list={Tiers}\n          itemLabel={(a) => t(a)}\n        />\n      </div>\n      <div>\n        <OnOffToggle\n          state={lostForgiveness}\n          label={t(\"Lost Forgiveness\")}\n        />\n      </div>\n    </div>\n  );\n}\n","import { calcRPFromPlacement, calcRPPerKill, RP_FROM_KILL_CAP, Tier } from \"./data\";\n\nexport const ENTRY_COST = {\n  Bronze: 0,\n  Silver: 12,\n  Gold: 24,\n  Platinum: 36,\n  Diamond: 48,\n  Master: 60,\n  \"Apex Predator\": 60,\n};\ntype Result = {\n  placement: number;\n  killPoint: number;\n  tier: Tier;\n  lostForgiveness: boolean;\n};\nexport function calcRP(result: Result): number {\n  const rp =\n    calcRPFromKill(result) +\n    calcRPFromPlacement(result.placement) -\n    ENTRY_COST[result.tier];\n  return result.lostForgiveness ? Math.max(0, rp) : rp;\n}\n\nexport function calcRPFromKill({\n  placement,\n  killPoint,\n}: Result): number {\n  const rpPerKill = calcRPPerKill(placement);\n  return Math.min(rpPerKill * killPoint, RP_FROM_KILL_CAP);\n}\n","import { useTranslation } from \"react-i18next\";\nimport {\n  calcRPFromPlacement,\n  calcRPPerKill,\n  ENTRY_COST,\n  RP_FROM_KILL_CAP,\n  Tier,\n} from \"../data\";\nimport { calcRPFromKill } from \"../rpCalculator\";\ntype Props = {\n  placement: number;\n  killPoint: number;\n  tier: Tier;\n  lostForgiveness: boolean;\n};\nexport default function Breakdown(props: Props) {\n  const { t } = useTranslation();\n  const rpFromPlacement = calcRPFromPlacement(\n    props.placement\n  );\n  const rpFromKill = calcRPFromKill(props);\n  const lostForgivenessRP = props.lostForgiveness\n    ? -Math.min(\n        0,\n        rpFromKill +\n          rpFromPlacement -\n          ENTRY_COST[props.tier]\n      )\n    : 0;\n  return (\n    <details>\n      <summary>{t(\"Breakdown\")}</summary>\n      <div>\n        {t(\"Base RP from placement\")}: {rpFromPlacement}\n      </div>\n      <KABreakDown {...props} />\n      <div>\n        {t(\"Entry cost\")}: {-ENTRY_COST[props.tier]}\n      </div>\n      <div>\n        {t(\"Lost Forgiveness\")}:{\" \"}\n        {lostForgivenessRP !== 0 ? lostForgivenessRP : \"--\"}\n      </div>\n    </details>\n  );\n}\nfunction Formula(props: Props) {\n  return (\n    <>\n      {calcRPPerKill(props.placement) * props.killPoint} ={\" \"}\n      {calcRPPerKill(props.placement)} * {props.killPoint}{\" \"}\n    </>\n  );\n}\nfunction KABreakDown(props: Props) {\n  const { t } = useTranslation();\n  const rawKARP =\n    calcRPPerKill(props.placement) * props.killPoint;\n  return (\n    <div>\n      {t(\"Bonus RP from Kill/Assist\")}:{\" \"}\n      {rawKARP > RP_FROM_KILL_CAP ? (\n        <>\n          <del>\n            <Formula {...props} />\n          </del>\n        </>\n      ) : (\n        <Formula {...props} />\n      )}{\" \"}\n      {rawKARP >= RP_FROM_KILL_CAP && (\n        <>(Max: {RP_FROM_KILL_CAP})</>\n      )}\n    </div>\n  );\n}\n","import { ComponentType, Fragment, ReactNode } from \"react\";\n\nexport type HeaderCellConfig = {\n  colSpan?: number;\n  rowSpan?: number;\n};\nexport type Axis<T> = {\n  label: (config?: HeaderCellConfig) => ReactNode;\n  values: T[];\n  header: (props: { value: T }) => ReactNode;\n};\nexport type TwoDTableFormatProps<X, Y> = {\n  axises: { x: Axis<X>; y: Axis<Y> };\n  cell: (props: { x: X; y: Y }) => ReactNode;\n  caption: () => ReactNode;\n  Table: ComponentType;\n  Tr: ComponentType;\n};\n\nexport function TwoDTableFormat<X, Y>({\n  axises: { x: xAxis, y: yAxis },\n  cell,\n  caption,\n  Table,\n  Tr,\n}: TwoDTableFormatProps<X, Y>) {\n  return (\n    <Table>\n      {caption()}\n      <thead>\n        <Tr>\n          {yAxis.label({ rowSpan: 2 })}\n          {xAxis.label({ colSpan: xAxis.values.length })}\n        </Tr>\n        <Tr>\n          {xAxis.values.map((x, i) => (\n            <Fragment key={i}>\n              {xAxis.header({ value: x })}\n            </Fragment>\n          ))}\n        </Tr>\n      </thead>\n      <tbody>\n        {yAxis.values.map((y, i) => (\n          <Tr key={i}>\n            {yAxis.header({ value: y })}\n            {xAxis.values.map((x, j) => (\n              <Fragment key={j}>{cell({ x, y })}</Fragment>\n            ))}\n          </Tr>\n        ))}\n      </tbody>\n    </Table>\n  );\n}\n","/** @jsxImportSource @emotion/react */\nimport { jsx } from \"@emotion/react/macro\";\nimport styled from \"@emotion/styled/macro\";\nimport { useTranslation } from \"react-i18next\";\nimport { range } from \"../util/range\";\nimport { Tier } from \"../data\";\nimport { calcRP } from \"../rpCalculator\";\nimport { TwoDTableFormat } from \"./TwoDTableFormat\";\nimport { useContext } from \"react\";\nimport { PageStateContext } from \"./App\";\nimport { action } from \"mobx\";\nimport { observer, Observer } from \"mobx-react-lite\";\ntype ExtraThProps = {\n  selected?: boolean;\n};\nconst Th = styled.th`\n  border: solid 2px lightgray;\n  text-align: center;\n  background-color: ${({ selected }: ExtraThProps) =>\n    selected ? \"dimgray\" : undefined};\n  color: ${({ selected }: ExtraThProps) =>\n    selected ? \"white\" : undefined};\n`;\ntype ExtraTdProps = {\n  selected?: boolean;\n};\nconst Td = styled.td`\n  border: solid 2px lightgray;\n  text-align: end;\n  background-color: ${({ selected }: ExtraTdProps) =>\n    selected ? \"dimgray\" : undefined};\n  color: ${({ selected }: ExtraThProps) =>\n    selected ? \"white\" : undefined};\n`;\nconst Table = styled.table`\n  table-layout: fixed;\n  width: 100%;\n  border-collapse: collapse;\n`;\nconst Tr = styled.tr``;\n\nexport const Cell = observer(\n  ({\n    placement,\n    killPoint,\n  }: {\n    placement: number;\n    killPoint: number;\n  }) => {\n    const pageState = useContext(PageStateContext);\n    const rp = calcRP({\n      placement,\n      killPoint,\n      tier: pageState.tier,\n      lostForgiveness: pageState.lostForgiveness,\n    });\n    const handleClick = action(() => {\n      pageState.placement = placement;\n      pageState.killPoint = killPoint;\n    });\n\n    return (\n      <Td\n        selected={\n          placement == pageState.placement &&\n          killPoint == pageState.killPoint\n        }\n        onClick={handleClick}\n      >\n        {rp}\n      </Td>\n    );\n  }\n);\n\nexport const ColumnHeader = observer(\n  ({ placement }: { placement: number }) => {\n    const pageState = useContext(PageStateContext);\n\n    const handleClick = action(() => {\n      pageState.placement = placement;\n    });\n\n    return (\n      <Th\n        scope=\"col\"\n        onClick={handleClick}\n        selected={placement == pageState.placement}\n      >\n        {placement}\n      </Th>\n    );\n  }\n);\nexport const RowHeader = observer(\n  ({ killPoint }: { killPoint: number }) => {\n    const pageState = useContext(PageStateContext);\n\n    const handleClick = action(() => {\n      pageState.killPoint = killPoint;\n    });\n\n    return (\n      <Th\n        scope=\"row\"\n        onClick={handleClick}\n        selected={killPoint == pageState.killPoint}\n      >\n        {killPoint}\n      </Th>\n    );\n  }\n);\ntype Props = {\n  tier: Tier;\n  lostForgiveness: boolean;\n};\nexport function Report({ tier, lostForgiveness }: Props) {\n  const { t } = useTranslation();\n\n  return (\n    <TwoDTableFormat\n      caption={() => (\n        <caption>\n          {lostForgiveness\n            ? t(\"RP for {{tier}} with lost forgiveness\", {\n                tier: t(tier),\n              })\n            : t(\"RP for {{tier}}\", { tier: t(tier) })}\n        </caption>\n      )}\n      axises={{\n        x: {\n          label: (props) => (\n            <Th {...props}>{t(\"Placement\")}</Th>\n          ),\n          values: range(20, 1),\n          header: (a) => (\n            <ColumnHeader placement={a.value} />\n          ),\n        },\n        y: {\n          label: (props) => (\n            <Th {...props}>{t(\"Kill/Assist Points\")}</Th>\n          ),\n          values: range(13, 0),\n          header: (a) => <RowHeader killPoint={a.value} />,\n        },\n      }}\n      cell={({ x, y }) => {\n        return <Cell placement={x} killPoint={y} />;\n      }}\n      Table={(props: any) => <Table {...props} />}\n      Tr={(props: any) => <Tr {...props} />}\n    />\n  );\n}\n","/** @jsxImportSource @emotion/react */\nimport { jsx } from \"@emotion/react/macro\";\nimport { useTranslation } from \"react-i18next\";\nimport { Tier } from \"../data\";\nimport { calcRP } from \"../rpCalculator\";\nimport Breakdown from \"./Breakdown\";\nimport { Report } from \"./Report\";\n\nexport function Output(props: {\n  placement: number;\n  killPoint: number;\n  tier: Tier;\n  lostForgiveness: boolean;\n}) {\n  const { t } = useTranslation();\n  const totalRP = calcRP(props);\n  return (\n    <div css={{ marginTop: 24 }}>\n      <div>\n        {t(\"Earned RP\") + \": \"}\n        {totalRP}\n      </div>\n      <Breakdown {...props} />\n      <div css={{ marginTop: 24 }}>\n        <Report {...props} />\n      </div>\n    </div>\n  );\n}\n","import { IObservableValue } from \"mobx\";\nimport { useMemo } from \"react\";\n\nexport function useSyncedBox<T, Key extends keyof T>(\n  state: T,\n  accessor: Key\n) {\n  const newObservable = useMemo(\n    () =>\n      ({\n        get() {\n          return state[accessor];\n        },\n        set(value: T[Key]) {\n          state[accessor] = value;\n        },\n      } as any as IObservableValue<T[Key]>),\n    []\n  );\n  return newObservable;\n}\n","/** @jsxImportSource @emotion/react */\nimport { jsx } from \"@emotion/react/macro\";\nimport { createContext, useMemo } from \"react\";\nimport { Tier, Tiers } from \"../data\";\nimport { Header } from \"./Header\";\nimport { Inputs } from \"./Inputs\";\nimport { Output } from \"./Output\";\nimport { Observer } from \"mobx-react-lite\";\nimport { observable } from \"mobx\";\nimport { useSyncedBox } from \"../util/useConvertedObservable\";\nexport type PageState = {\n  placement: number;\n  killPoint: number;\n  tier: Tier;\n  lostForgiveness: boolean;\n};\nexport const PageStateContext = createContext(\n  null as any as PageState\n);\n\nexport default function App() {\n  const pageState = useMemo<PageState>(\n    () =>\n      observable({\n        placement: 20,\n        killPoint: 0,\n        tier: Tiers[0],\n        lostForgiveness: false,\n      }),\n    []\n  );\n  const placement = useSyncedBox(pageState, \"placement\");\n  const killPoint = useSyncedBox(pageState, \"killPoint\");\n  const tier = useSyncedBox(pageState, \"tier\");\n  const lostForgiveness = useSyncedBox(\n    pageState,\n    \"lostForgiveness\"\n  );\n\n  return (\n    <PageStateContext.Provider value={pageState}>\n      <Header />\n      <Inputs\n        placement={placement}\n        killPoint={killPoint}\n        tier={tier}\n        lostForgiveness={lostForgiveness}\n      />\n      <Observer>\n        {() => (\n          <Output\n            placement={placement.get()}\n            killPoint={killPoint.get()}\n            tier={tier.get()}\n            lostForgiveness={lostForgiveness.get()}\n          />\n        )}\n      </Observer>\n    </PageStateContext.Provider>\n  );\n}\n","import App from \"./component/App\";\n\nexport default function AppRoot() {\n  return <App/>;\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './i18n';\nimport App from './AppRoot';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}