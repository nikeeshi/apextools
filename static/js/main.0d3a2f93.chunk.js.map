{"version":3,"sources":["i18n.ts","data.ts","mediaQuery.ts","component/LanguageSwitch.tsx","component/Header.tsx","component/OnOffToggle.tsx","component/RadioStyleSelector.tsx","util/range.ts","component/DropDownMenu.tsx","component/Inputs.tsx","rpCalculator.ts","component/Breakdown.tsx","component/TwoDTableLayout.tsx","component/FullReport.tsx","component/Sticky3x3.tsx","component/ScrollableTable.tsx","component/SmallReport.tsx","component/Output.tsx","util/useConvertedObservable.ts","component/App.tsx","AppRoot.tsx","reportWebVitals.ts","index.tsx"],"names":["i18n","use","initReactI18next","LanguageDetector","init","resources","interpolation","escapeValue","calcRPFromPlacement","placement","calcRPPerKill","RP_FROM_KILL_CAP","Tiers","ENTRY_COST","Bronze","Silver","Gold","Platinum","Diamond","Master","isLarge","facepaint","LanguageSwitch","useTranslation","languageList","currentLg","language","languageListInOrder","filter","lg","concat","map","index","code","name","href","onClick","lng","changeLanguage","Header","t","css","mq","width","display","textAlign","verticalAlign","marginTop","marginRight","OnOffToggle","label","state","type","checked","get","onChange","action","set","RadioStyleSelectorOption","selected","borderWidth","borderStyle","borderColor","backgroundColor","marginLeft","RadioStyleSelector","list","itemLabel","item","range","from","to","arr","i","push","DropDownMenu","observer","e","parseInt","target","value","findIndex","Inputs","killPoint","tier","lostForgiveness","Selector","useMediaQuery","a","String","calcRP","result","rp","calcRPFromKill","Math","max","rpPerKill","min","Breakdown","props","rpFromPlacement","rpFromKill","lostForgivenessRP","KABreakDown","Formula","rawKARP","TwoDTableLayout","axises","xAxis","x","yAxis","y","cell","caption","Table","Tr","rowSpan","colSpan","values","length","header","j","TopTh","SubTh","undefined","Td","Cell","pageState","useContext","PageStateContext","handleClick","ColumnHeader","scope","RowHeader","Report","Sticky3x3","forwardRef","ref","height","innerWidth","innerHeight","cells","fakeBackground","totalInnerWidth","totalInnerHeight","ScrollableTable","viewport","headerSize","cellSize","colCaptionHeight","xCaptionHeight","gap","headerGap","xs","ys","xCaption","config","yCaption","xHeader","yHeader","useState","divRef","setDivRef","clientWidth","setClientWidth","useEffect","xCaptionWidth","useMemo","resizeObserver","ResizeObserver","entries","observe","unobserve","div","XCaption","YCaption","SubXTh","SubYTh","CellStyled","XHeader","YHeader","SmallReport","vw","document","body","Output","totalRP","FullReport","useSyncedBox","accessor","createContext","App","observable","Provider","AppRoot","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0d3a2f93.chunk.js","sourcesContent":["import i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\nimport LanguageDetector from \"i18next-browser-languagedetector\";\nimport resources from \"./translations.json\";\n\ni18n\n  .use(initReactI18next)\n  .use(LanguageDetector)\n  .init({\n    resources,\n    interpolation: {\n      escapeValue: false,\n    },\n  });\n\nexport default i18n;\n","export function calcRPFromPlacement(\n  placement: number\n): number {\n  const RP: { [p: number]: number } = {\n    1: 125,\n    2: 95,\n    3: 70,\n    4: 55,\n    5: 45,\n    6: 30,\n    7: 20,\n    8: 20,\n    9: 10,\n    10: 10,\n    11: 5,\n    12: 5,\n    13: 5,\n  };\n  return RP[placement] ?? 0;\n}\nexport function calcRPPerKill(placement: number): number {\n  const RP: { [p: number]: number } = {\n    1: 15,\n    2: 11,\n    3: 8,\n    4: 5,\n    5: 5,\n    6: 1,\n    7: 1,\n    8: 1,\n    9: 1,\n    10: 1,\n  };\n  return (RP[placement] ?? 0) + 10;\n}\nexport const RP_FROM_KILL_CAP = 125;\nexport const Tiers = [\n  \"Bronze\",\n  \"Silver\",\n  \"Gold\",\n  \"Platinum\",\n  \"Diamond\",\n  \"Master\",\n  \"Apex Predator\",\n] as const;\nexport type Tier = typeof Tiers[number];\nexport const ENTRY_COST = {\n  Bronze: 0,\n  Silver: 12,\n  Gold: 24,\n  Platinum: 36,\n  Diamond: 48,\n  Master: 60,\n  \"Apex Predator\": 60,\n};\n","import facepaint from \"facepaint\";\n\nexport const isLarge = \"screen and (min-width: 600px)\";\nexport default facepaint([\"@media \" + isLarge]);\n","/** @jsxImportSource @emotion/react */\nimport { jsx } from \"@emotion/react/macro\";\nimport { Fragment } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\nexport default function LanguageSwitch() {\n  const { i18n } = useTranslation();\n  const changeLanguage = (lng: string) => {\n    i18n.changeLanguage(lng);\n  };\n  const languageList = [\n    [\"ja\", \"日本語\"],\n    [\"en\", \"English\"],\n  ];\n  const currentLg = i18n.language;\n  const languageListInOrder = languageList\n    .filter((lg) => lg[0] === currentLg)\n    .concat(\n      languageList.filter((lg) => lg[0] !== currentLg)\n    );\n  return (\n    <>\n      {languageListInOrder.map(([code, name], index) => (\n        <Fragment key={index}>\n          {index !== 0 && \"/\"}\n          <a\n            href=\"#\"\n            onClick={() => {\n              changeLanguage(code);\n            }}\n          >\n            {name}\n          </a>\n        </Fragment>\n      ))}\n    </>\n  );\n}\n","/** @jsxImportSource @emotion/react */\nimport { jsx } from \"@emotion/react/macro\";\nimport { useTranslation } from \"react-i18next\";\nimport mq from \"../mediaQuery\";\nimport LanguageSwitch from \"./LanguageSwitch\";\n\nexport function Header() {\n  const { t } = useTranslation();\n  return (\n    <header>\n      <h1\n        css={mq({\n          width: [\"100%\", \"80%\"],\n          display: \"inline-block\",\n        })}\n      >\n        {t(\"Apex Legends RP calculator\")}\n      </h1>\n      <div\n        css={mq({\n          width: [\"100%\", \"calc(20% - 24px)\"],\n          display: \"inline-block\",\n          textAlign: \"end\",\n          verticalAlign: \"top\",\n          marginTop: [0, 24],\n          marginRight: 24,\n        })}\n      >\n        <LanguageSwitch />\n      </div>\n    </header>\n  );\n}\n","import { action, IObservableValue } from \"mobx\";\nimport { Observer } from \"mobx-react-lite\";\n\ntype Props = {\n  label: string;\n  state: IObservableValue<boolean>;\n};\nexport function OnOffToggle({ label, state }: Props) {\n  return (\n    <label>\n      {label}{\" \"}\n      <Observer>\n        {() => (\n          <input\n            type=\"checkbox\"\n            checked={state.get()}\n            onChange={action(() => state.set(!state.get()))}\n          />\n        )}\n      </Observer>\n    </label>\n  );\n}\n","/** @jsxImportSource @emotion/react */\nimport { jsx } from \"@emotion/react/macro\";\nimport { action, IObservableValue } from \"mobx\";\nimport { Observer } from \"mobx-react-lite\";\n\nexport type RadioStyleSelectorProps<Item> = {\n  label: string;\n  list: readonly Item[];\n  selected: IObservableValue<Item>;\n  itemLabel: (i: Item) => string;\n};\ntype RadioStyleSelectorOptionProps = {\n  onClick: () => void;\n  selected: boolean;\n  label: string;\n};\n\nexport function RadioStyleSelectorOption({\n  onClick,\n  selected,\n  label,\n}: RadioStyleSelectorOptionProps) {\n  return (\n    <button\n      onClick={onClick}\n      css={{\n        borderWidth: 1,\n        borderStyle: \"solid\",\n        borderColor: selected ? \"#000000\" : \"#efefef\",\n        backgroundColor: \"#efefef\",\n        marginLeft: 0,\n      }}\n    >\n      {label}\n    </button>\n  );\n}\nexport function RadioStyleSelector<Item extends any>({\n  label,\n  selected,\n  list,\n  itemLabel,\n}: RadioStyleSelectorProps<Item>) {\n  return (\n    <label>\n      {label}{\" \"}\n      <div>\n        {list.map((item, index) => (\n          <Observer key={index}>\n            {() => (\n              <RadioStyleSelectorOption\n                onClick={action(() => selected.set(item))}\n                selected={selected.get() === item}\n                label={itemLabel(item)}\n              />\n            )}\n          </Observer>\n        ))}\n      </div>\n    </label>\n  );\n}\n","export function range(from: number, to: number) {\n  const arr = [];\n  if (from <= to)\n    for (let i = from; i <= to; i++) arr.push(i);\n  else for (let i = from; i >= to; i--) arr.push(i);\n  return arr;\n}\n","/** @jsxImportSource @emotion/react */\nimport { jsx } from \"@emotion/react/macro\";\nimport { action, IObservableValue } from \"mobx\";\nimport { observer } from \"mobx-react-lite\";\n\ntype Props<Item> = {\n  label: string;\n  list: readonly Item[];\n  selected: IObservableValue<Item>;\n  itemLabel: (i: Item) => string;\n};\nexport const DropDownMenu = observer(\n  <Item,>({\n    label,\n    selected,\n    list,\n    itemLabel,\n  }: Props<Item>) => {\n    return (\n      <label>\n        {label}{\" \"}\n        <select\n          onChange={action((e) => {\n            selected.set(\n              list[parseInt(e.target.value, 10)]\n            );\n          })}\n          value={list.findIndex(\n            (item) => item === selected.get()\n          )}\n        >\n          {list.map((item, index) => (\n            <option value={index} key={index}>\n              {itemLabel(item)}\n            </option>\n          ))}\n        </select>\n      </label>\n    );\n  }\n);\n","import { useTranslation } from \"react-i18next\";\nimport { OnOffToggle } from \"./OnOffToggle\";\nimport { RadioStyleSelector } from \"./RadioStyleSelector\";\nimport { Tier, Tiers } from \"../data\";\nimport { range } from \"../util/range\";\nimport { isLarge } from \"../mediaQuery\";\nimport { DropDownMenu } from \"./DropDownMenu\";\nimport { useMediaQuery } from \"@react-hook/media-query\";\nimport { IObservableValue } from \"mobx\";\n\nexport function Inputs({\n  placement,\n  killPoint,\n  tier,\n  lostForgiveness,\n}: {\n  placement: IObservableValue<number>;\n  killPoint: IObservableValue<number>;\n  tier: IObservableValue<Tier>;\n  lostForgiveness: IObservableValue<boolean>;\n}) {\n  const { t } = useTranslation();\n  const Selector = useMediaQuery(isLarge)\n    ? RadioStyleSelector\n    : DropDownMenu;\n  return (\n    <div>\n      <div>\n        <Selector\n          selected={placement}\n          label={t(\"Placement\")}\n          list={range(20, 1)}\n          itemLabel={(a) => String(a)}\n        />\n      </div>\n      <div>\n        <Selector\n          selected={killPoint}\n          label={t(\"Kill/Assist Points\")}\n          list={range(0, 13)}\n          itemLabel={(a) => String(a)}\n        />\n      </div>\n      <div>\n        <Selector\n          selected={tier}\n          label={t(\"Tier\")}\n          list={Tiers}\n          itemLabel={(a) => t(a)}\n        />\n      </div>\n      <div>\n        <OnOffToggle\n          state={lostForgiveness}\n          label={t(\"Lost Forgiveness\")}\n        />\n      </div>\n    </div>\n  );\n}\n","import { calcRPFromPlacement, calcRPPerKill, RP_FROM_KILL_CAP, Tier } from \"./data\";\n\nexport const ENTRY_COST = {\n  Bronze: 0,\n  Silver: 12,\n  Gold: 24,\n  Platinum: 36,\n  Diamond: 48,\n  Master: 60,\n  \"Apex Predator\": 60,\n};\ntype Result = {\n  placement: number;\n  killPoint: number;\n  tier: Tier;\n  lostForgiveness: boolean;\n};\nexport function calcRP(result: Result): number {\n  const rp =\n    calcRPFromKill(result) +\n    calcRPFromPlacement(result.placement) -\n    ENTRY_COST[result.tier];\n  return result.lostForgiveness ? Math.max(0, rp) : rp;\n}\n\nexport function calcRPFromKill({\n  placement,\n  killPoint,\n}: Result): number {\n  const rpPerKill = calcRPPerKill(placement);\n  return Math.min(rpPerKill * killPoint, RP_FROM_KILL_CAP);\n}\n","import { useTranslation } from \"react-i18next\";\nimport {\n  calcRPFromPlacement,\n  calcRPPerKill,\n  ENTRY_COST,\n  RP_FROM_KILL_CAP,\n  Tier,\n} from \"../data\";\nimport { calcRPFromKill } from \"../rpCalculator\";\ntype Props = {\n  placement: number;\n  killPoint: number;\n  tier: Tier;\n  lostForgiveness: boolean;\n};\nexport default function Breakdown(props: Props) {\n  const { t } = useTranslation();\n  const rpFromPlacement = calcRPFromPlacement(\n    props.placement\n  );\n  const rpFromKill = calcRPFromKill(props);\n  const lostForgivenessRP = props.lostForgiveness\n    ? -Math.min(\n        0,\n        rpFromKill +\n          rpFromPlacement -\n          ENTRY_COST[props.tier]\n      )\n    : 0;\n  return (\n    <details>\n      <summary>{t(\"Breakdown\")}</summary>\n      <div>\n        {t(\"Base RP from placement\")}: {rpFromPlacement}\n      </div>\n      <KABreakDown {...props} />\n      <div>\n        {t(\"Entry cost\")}: {-ENTRY_COST[props.tier]}\n      </div>\n      <div>\n        {t(\"Lost Forgiveness\")}:{\" \"}\n        {lostForgivenessRP !== 0 ? lostForgivenessRP : \"--\"}\n      </div>\n    </details>\n  );\n}\nfunction Formula(props: Props) {\n  return (\n    <>\n      {calcRPPerKill(props.placement) * props.killPoint} ={\" \"}\n      {calcRPPerKill(props.placement)} * {props.killPoint}{\" \"}\n    </>\n  );\n}\nfunction KABreakDown(props: Props) {\n  const { t } = useTranslation();\n  const rawKARP =\n    calcRPPerKill(props.placement) * props.killPoint;\n  return (\n    <div>\n      {t(\"Bonus RP from Kill/Assist\")}:{\" \"}\n      {rawKARP > RP_FROM_KILL_CAP ? (\n        <>\n          <del>\n            <Formula {...props} />\n          </del>\n        </>\n      ) : (\n        <Formula {...props} />\n      )}{\" \"}\n      {rawKARP >= RP_FROM_KILL_CAP && (\n        <>(Max: {RP_FROM_KILL_CAP})</>\n      )}\n    </div>\n  );\n}\n","import { ComponentType, Fragment, ReactNode } from \"react\";\n\nexport type HeaderCellConfig = {\n  colSpan?: number;\n  rowSpan?: number;\n};\nexport type Axis<T> = {\n  label: (config?: HeaderCellConfig) => ReactNode;\n  values: T[];\n  header: (props: { value: T }) => ReactNode;\n};\nexport type TwoDTableLayoutProps<X, Y> = {\n  axises: { x: Axis<X>; y: Axis<Y> };\n  cell: (props: { x: X; y: Y }) => ReactNode;\n  caption: () => ReactNode;\n  Table: ComponentType;\n  Tr: ComponentType;\n};\n\nexport function TwoDTableLayout<X, Y>({\n  axises: { x: xAxis, y: yAxis },\n  cell,\n  caption,\n  Table,\n  Tr,\n}: TwoDTableLayoutProps<X, Y>) {\n  return (\n    <Table>\n      {caption()}\n      <thead>\n        <Tr>\n          {yAxis.label({ rowSpan: 2 })}\n          {xAxis.label({ colSpan: xAxis.values.length })}\n        </Tr>\n        <Tr>\n          {xAxis.values.map((x, i) => (\n            <Fragment key={i}>\n              {xAxis.header({ value: x })}\n            </Fragment>\n          ))}\n        </Tr>\n      </thead>\n      <tbody>\n        {yAxis.values.map((y, i) => (\n          <Tr key={i}>\n            {yAxis.header({ value: y })}\n            {xAxis.values.map((x, j) => (\n              <Fragment key={j}>{cell({ x, y })}</Fragment>\n            ))}\n          </Tr>\n        ))}\n      </tbody>\n    </Table>\n  );\n}\n","/** @jsxImportSource @emotion/react */\nimport { jsx } from \"@emotion/react/macro\";\nimport styled from \"@emotion/styled/macro\";\nimport { useTranslation } from \"react-i18next\";\nimport { range } from \"../util/range\";\nimport { Tier } from \"../data\";\nimport { calcRP } from \"../rpCalculator\";\nimport { TwoDTableLayout } from \"./TwoDTableLayout\";\nimport { useContext } from \"react\";\nimport { PageStateContext } from \"./App\";\nimport { action } from \"mobx\";\nimport { observer } from \"mobx-react-lite\";\ntype ExtraThProps = {\n  selected?: boolean;\n};\n\nconst TopTh = styled.th`\n  border: solid 2px lightgray;\n  text-align: center;\n  cursor: default;\n`;\nconst SubTh = styled.th`\n  border: solid 2px lightgray;\n  text-align: center;\n  background-color: ${({ selected }: ExtraThProps) =>\n    selected ? \"dimgray\" : undefined};\n  color: ${({ selected }: ExtraThProps) =>\n    selected ? \"white\" : undefined};\n  cursor: pointer;\n  :hover {\n    background-color: lightgray;\n  }\n`;\ntype ExtraTdProps = {\n  selected?: boolean;\n};\nconst Td = styled.td`\n  border: solid 2px lightgray;\n  text-align: end;\n  background-color: ${({ selected }: ExtraTdProps) =>\n    selected ? \"dimgray\" : undefined};\n  color: ${({ selected }: ExtraThProps) =>\n    selected ? \"white\" : undefined};\n  cursor: pointer;\n  :hover {\n    background-color: lightgray;\n  }\n`; \nconst Table = styled.table`\n  table-layout: fixed;\n  width: 100%;\n  border-collapse: collapse;\n`;\nconst Tr = styled.tr``;\n\nexport const Cell = observer(\n  ({\n    placement,\n    killPoint,\n  }: {\n    placement: number;\n    killPoint: number;\n  }) => {\n    const pageState = useContext(PageStateContext);\n    const rp = calcRP({\n      placement,\n      killPoint,\n      tier: pageState.tier,\n      lostForgiveness: pageState.lostForgiveness,\n    });\n    const handleClick = action(() => {\n      pageState.placement = placement;\n      pageState.killPoint = killPoint;\n    });\n\n    return (\n      <Td\n        selected={\n          placement == pageState.placement &&\n          killPoint == pageState.killPoint\n        }\n        onClick={handleClick}\n      >\n        {rp}\n      </Td>\n    );\n  }\n);\n\nexport const ColumnHeader = observer(\n  ({ placement }: { placement: number }) => {\n    const pageState = useContext(PageStateContext);\n\n    const handleClick = action(() => {\n      pageState.placement = placement;\n    });\n\n    return (\n      <SubTh\n        scope=\"col\"\n        onClick={handleClick}\n        selected={placement == pageState.placement}\n      >\n        {placement}\n      </SubTh>\n    );\n  }\n);\nexport const RowHeader = observer(\n  ({ killPoint }: { killPoint: number }) => {\n    const pageState = useContext(PageStateContext);\n\n    const handleClick = action(() => {\n      pageState.killPoint = killPoint;\n    });\n\n    return (\n      <SubTh\n        scope=\"row\"\n        onClick={handleClick}\n        selected={killPoint == pageState.killPoint}\n      >\n        {killPoint}\n      </SubTh>\n    );\n  }\n);\ntype Props = {\n  tier: Tier;\n  lostForgiveness: boolean;\n};\nexport function Report({ tier, lostForgiveness }: Props) {\n  const { t } = useTranslation();\n\n  return (\n    <TwoDTableLayout\n      caption={() => (\n        <caption>\n          {lostForgiveness\n            ? t(\"RP for {{tier}} with lost forgiveness\", {\n                tier: t(tier),\n              })\n            : t(\"RP for {{tier}}\", { tier: t(tier) })}\n        </caption>\n      )}\n      axises={{\n        x: {\n          label: (props) => (\n            <TopTh {...props}>{t(\"Placement\")}</TopTh>\n          ),\n          values: range(20, 1),\n          header: (a) => (\n            <ColumnHeader placement={a.value} />\n          ),\n        },\n        y: {\n          label: (props) => (\n            <TopTh {...props}>\n              {t(\"Kill/Assist Points\")}\n            </TopTh>\n          ),\n          values: range(13, 0),\n          header: (a) => <RowHeader killPoint={a.value} />,\n        },\n      }}\n      cell={({ x, y }) => {\n        return <Cell placement={x} killPoint={y} />;\n      }}\n      Table={(props: any) => <Table {...props} />}\n      Tr={(props: any) => <Tr {...props} />}\n    />\n  );\n}\n","/** @jsxImportSource @emotion/react */\nimport { css, jsx } from \"@emotion/react/macro\";\nimport { forwardRef, ReactNode, Ref } from \"react\";\n\ntype Vec3<T> = [T, T, T];\nexport const Sticky3x3 = forwardRef(\n  (\n    {\n      width,\n      height,\n      innerWidth,\n      innerHeight,\n      cells,\n      fakeBackground = false,\n    }: {\n      width: number;\n      height: number;\n      innerWidth: Vec3<number>;\n      innerHeight: Vec3<number>;\n      cells: Vec3<Vec3<ReactNode>>;\n      fakeBackground?: boolean;\n    },\n    ref: Ref<HTMLDivElement>\n  ) => {\n    const totalInnerWidth =\n      innerWidth[0] + innerWidth[1] + innerWidth[2];\n    const totalInnerHeight =\n      innerHeight[0] + innerHeight[1] + innerHeight[2];\n    const cell = (x: 0 | 1 | 2, y: 0 | 1 | 2) => (\n      <div\n        css={css`\n          width: ${innerWidth[x]}px;\n          height: ${innerHeight[y]}px;\n          ${fakeBackground\n            ? `background-color: rgba(\n          ${x * 127},\n          ${y * 127},\n          ${255 - y * 127},\n          1\n        );`\n            : \"\"}\n          order: ${x + y * 3};\n          position: sticky;\n          ${y == 0 ? \"top: 0;\" : \"\"}\n          ${y == 2 ? \"bottom: 0;\" : \"\"}\n        ${x == 0 ? \"left: 0;\" : \"\"}\n        ${x == 2 ? \"right: 0;\" : \"\"}\n        `}\n      >\n        {cells[y][x]}\n      </div>\n    );\n    return (\n      <div\n        css={css`\n          overflow: auto;\n          width: ${width}px;\n          height: ${height}px;\n          resize: both;\n        `}\n        ref={ref}\n      >\n        <div\n          css={css`\n            position: relative;\n            display: flex;\n            flex-wrap: wrap;\n            width: ${totalInnerWidth}px;\n            height: ${totalInnerHeight}px;\n          `}\n        >\n          {/* center */}\n          {cell(1, 1)}\n          {/* edges */}\n          {cell(1, 0)}\n          {cell(0, 1)}\n          {cell(2, 1)}\n          {cell(1, 2)}\n          {/* corners */}\n          {cell(0, 0)}\n          {cell(2, 0)}\n          {cell(0, 2)}\n          {cell(2, 2)}\n        </div>\n      </div>\n    );\n  }\n);\n","/** @jsxImportSource @emotion/react */\nimport { css, jsx } from \"@emotion/react/macro\";\nimport { useEffect, useMemo } from \"react\";\nimport { useState } from \"react\";\nimport { ReactNode } from \"react\";\nimport { Sticky3x3 } from \"./Sticky3x3\";\n\nexport type Config = {\n  height: number;\n  width: number;\n};\ntype Vec2<T> = [T, T];\ntype Vec3<T> = [T, T, T];\n\n// x * y\n// w * h\nexport function ScrollableTable<X, Y>({\n  viewport = [500, 500],\n  headerSize = [80, 60],\n  cellSize = [46, 30], // content-box\n  colCaptionHeight: xCaptionHeight = 30,\n  gap = 2,\n  headerGap = 5,\n  borderColor = \"pink\",\n  xs = [],\n  ys = [],\n  xCaption = (config: Config) => \"X\",\n  yCaption = (config: Config) => \"Y\",\n  xHeader = (x, config: Config) => x,\n  yHeader = (y, config: Config) => y,\n  cell = (x, y, config: Config) => `${x} ${y}`,\n}: {\n  viewport?: Vec2<number>;\n  headerSize?: Vec2<number>;\n  cellSize?: Vec2<number>;\n  colCaptionHeight?: number;\n  borderColor?: string;\n  gap?: number;\n  headerGap?: number;\n  xs?: X[];\n  ys?: Y[];\n  xCaption?: (config: Config) => ReactNode;\n  yCaption?: (config: Config) => ReactNode;\n  xHeader?: (x: X, config: Config) => ReactNode;\n  yHeader?: (y: Y, config: Config) => ReactNode;\n  cell?: (x: X, y: Y, config: Config) => ReactNode;\n}) {\n  const width = [\n    gap + headerSize[0] + headerGap,\n    cellSize[0] * xs.length + gap * (xs.length - 1),\n    gap,\n  ] as Vec3<number>;\n  const height = [\n    gap + headerSize[1] + headerGap,\n    cellSize[1] * ys.length + gap * (ys.length - 1),\n    gap,\n  ] as Vec3<number>;\n  const [divRef, setDivRef] =\n    useState<HTMLDivElement | null>(null);\n  const [clientWidth, setClientWidth] = useState(1);\n  useEffect(() => {\n    setClientWidth(divRef?.clientWidth ?? 1);\n  }, [divRef]);\n  const xCaptionWidth = useMemo(\n    () =>\n      Math.max(\n        clientWidth - headerSize[0] - headerGap - gap * 2,\n        1\n      ),\n    [clientWidth]\n  );\n  useEffect(() => {\n    const resizeObserver = new ResizeObserver(\n      (entries) => {\n        setClientWidth(divRef?.clientWidth ?? 1);\n      }\n    );\n    divRef && resizeObserver.observe(divRef);\n    return () => {\n      divRef && resizeObserver.unobserve(divRef);\n    };\n  }, [divRef, clientWidth]);\n  return (\n    <Sticky3x3\n      ref={(div) => div && setDivRef(div)}\n      width={viewport[0]}\n      height={viewport[1]}\n      innerWidth={width}\n      innerHeight={height}\n      cells={[\n        [\n          <div\n            css={css`\n              border-style: solid;\n              border-color: ${borderColor};\n              border-width: ${gap}px ${headerGap}px\n                ${headerGap}px ${gap}px;\n              width: ${headerSize[0]}px;\n              height: ${headerSize[1]}px;\n              position: relative;\n            `}\n          >\n            {yCaption({\n              width: headerSize[0],\n              height: headerSize[1],\n            })}\n            <div\n              css={css`\n                border-style: solid;\n                border-color: ${borderColor};\n                border-width: ${gap}px 0 ${headerGap}px 0;\n                width: ${xCaptionWidth}px;\n                height: ${xCaptionHeight}px;\n                position: absolute;\n                top: ${-gap}px;\n                left: ${headerSize[0] + headerGap}px;\n              `}\n            >\n              {xCaption({\n                width: xCaptionWidth,\n                height: xCaptionHeight,\n              })}\n            </div>\n          </div>,\n          <div\n            css={css`\n              border-style: solid;\n              border-color: ${borderColor};\n              border-width: 0 0 ${headerGap}px 0;\n              margin-top: ${gap +\n              xCaptionHeight +\n              headerGap}px;\n            `}\n          >\n            <div\n              css={css`\n                display: flex;\n                height: ${headerSize[1] -\n                xCaptionHeight -\n                headerGap}px;\n              `}\n            >\n              {xs.map((x) => (\n                <div\n                  css={css`\n                    :not(:last-child) {\n                      border-style: solid;\n                      border-color: ${borderColor};\n                      border-width: 0 ${gap}px 0 0;\n                    }\n                    width: ${cellSize[0]}px;\n                    height: ${headerSize[1] -\n                    xCaptionHeight -\n                    headerGap}px;\n                  `}\n                >\n                  {xHeader(x, {\n                    width: cellSize[0],\n                    height:\n                      headerSize[1] -\n                      xCaptionHeight -\n                      headerGap,\n                  })}\n                </div>\n              ))}\n            </div>\n          </div>,\n          <div\n            css={css`\n              border-style: solid;\n              border-color: ${borderColor};\n              border-width: 0 ${gap}px 0 0;\n              height: ${height[0]}px;\n            `}\n          />,\n        ],\n        [\n          <div\n            css={css`\n              border-style: solid;\n              border-color: ${borderColor};\n              border-width: 0 ${headerGap}px 0 ${gap}px;\n              width: ${headerSize[0]}px;\n              height: ${cellSize[1] * ys.length +\n              gap * (ys.length - 1)}px;\n            `}\n          >\n            {ys.map((y) => (\n              <div\n                css={css`\n                  :not(:last-child) {\n                    border-style: solid;\n                    border-color: ${borderColor};\n                    border-width: 0 0 ${gap}px 0;\n                  }\n                  width: ${headerSize[0]}px;\n                  height: ${cellSize[1]}px;\n                `}\n              >\n                {yHeader(y, {\n                  width: headerSize[0],\n                  height: cellSize[1],\n                })}\n              </div>\n            ))}\n          </div>,\n          <div>\n            {ys.map((y) => (\n              <div\n                css={css`\n                  display: flex;\n                `}\n              >\n                {xs.map((x) => (\n                  <div\n                    css={css`\n                      border-style: solid;\n                      border-color: ${borderColor};\n                      border-width: 0;\n                      :not(:last-child) {\n                        border-right-width: ${gap}px;\n                      }\n                      div:not(:last-child) > & {\n                        border-bottom-width: ${gap}px;\n                      }\n                      width: ${cellSize[0]}px;\n                      height: ${cellSize[1]}px;\n                    `}\n                  >\n                    {cell(x, y, {\n                      width: cellSize[0],\n                      height: cellSize[0],\n                    })}\n                  </div>\n                ))}\n              </div>\n            ))}\n          </div>,\n          <div\n            css={css`\n              border-style: solid;\n              border-color: ${borderColor};\n              border-width: 0 ${gap}px 0 0;\n              height: ${height[1]}px;\n            `}\n          />,\n        ],\n        [\n          <div\n            css={css`\n              border-style: solid;\n              border-color: ${borderColor};\n              border-width: 0 0 ${gap}px 0;\n              width: ${width[0]}px;\n            `}\n          />,\n          <div\n            css={css`\n              border-style: solid;\n              border-color: ${borderColor};\n              border-width: 0 0 ${gap}px 0;\n              width: ${width[1]}px;\n            `}\n          />,\n          <div\n            css={css`\n              border-style: solid;\n              border-color: ${borderColor};\n              border-width: 0 0 ${gap}px 0;\n              width: ${width[2]}px;\n            `}\n          />,\n        ],\n      ]}\n    />\n  );\n}\n","/** @jsxImportSource @emotion/react */\nimport { jsx } from \"@emotion/react/macro\";\nimport styled from \"@emotion/styled/macro\";\nimport { useTranslation } from \"react-i18next\";\nimport { range } from \"../util/range\";\nimport { Tier } from \"../data\";\nimport { calcRP } from \"../rpCalculator\";\nimport { useContext } from \"react\";\nimport { PageStateContext } from \"./App\";\nimport { action } from \"mobx\";\nimport { observer } from \"mobx-react-lite\";\nimport { ScrollableTable } from \"./ScrollableTable\";\ntype ExtraThProps = {\n  selected?: boolean;\n};\n\nconst XCaption = styled.div`\n  text-align: center;\n  cursor: default;\n  background-color: white;\n  font-weight: bold;\n  width: 100%;\n  height: 100%;\n`;\nconst YCaption = styled.div`\n  text-align: center;\n  cursor: default;\n  background-color: white;\n  font-weight: bold;\n  width: 100%;\n  height: 100%;\n`;\nconst SubXTh = styled.div`\n  text-align: center;\n  background-color: ${({ selected }: ExtraThProps) =>\n    selected ? \"dimgray\" : \"white\"};\n  color: ${({ selected }: ExtraThProps) =>\n    selected ? \"white\" : undefined};\n  cursor: pointer;\n  :hover {\n    background-color: lightgray;\n  }\n  font-weight: bold;\n  width: 100%;\n  height: 100%;\n`;\nconst SubYTh = styled.div`\n  text-align: center;\n  background-color: ${({ selected }: ExtraThProps) =>\n    selected ? \"dimgray\" : \"white\"};\n  color: ${({ selected }: ExtraThProps) =>\n    selected ? \"white\" : undefined};\n  cursor: pointer;\n  :hover {\n    background-color: lightgray;\n  }\n  font-weight: bold;\n  width: 100%;\n  height: 100%;\n`;\ntype ExtraTdProps = {\n  selected?: boolean;\n};\nconst CellStyled = styled.div`\n  text-align: end;\n  background-color: ${({ selected }: ExtraTdProps) =>\n    selected ? \"dimgray\" : \"white\"};\n  color: ${({ selected }: ExtraThProps) =>\n    selected ? \"white\" : undefined};\n  cursor: pointer;\n  :hover {\n    background-color: lightgray;\n  }\n  width: 100%;\n  height: 100%;\n`;\n\nexport const Cell = observer(\n  ({\n    placement,\n    killPoint,\n  }: {\n    placement: number;\n    killPoint: number;\n  }) => {\n    const pageState = useContext(PageStateContext);\n    const rp = calcRP({\n      placement,\n      killPoint,\n      tier: pageState.tier,\n      lostForgiveness: pageState.lostForgiveness,\n    });\n    const handleClick = action(() => {\n      pageState.placement = placement;\n      pageState.killPoint = killPoint;\n    });\n\n    return (\n      <CellStyled\n        selected={\n          placement == pageState.placement &&\n          killPoint == pageState.killPoint\n        }\n        onClick={handleClick}\n      >\n        {rp}\n      </CellStyled>\n    );\n  }\n);\n\nexport const XHeader = observer(\n  ({ placement }: { placement: number }) => {\n    const pageState = useContext(PageStateContext);\n\n    const handleClick = action(() => {\n      pageState.placement = placement;\n    });\n\n    return (\n      <SubXTh\n        onClick={handleClick}\n        selected={placement == pageState.placement}\n      >\n        {placement}\n      </SubXTh>\n    );\n  }\n);\nexport const YHeader = observer(\n  ({ killPoint }: { killPoint: number }) => {\n    const pageState = useContext(PageStateContext);\n\n    const handleClick = action(() => {\n      pageState.killPoint = killPoint;\n    });\n\n    return (\n      <SubYTh\n        onClick={handleClick}\n        selected={killPoint == pageState.killPoint}\n      >\n        {killPoint}\n      </SubYTh>\n    );\n  }\n);\ntype Props = {\n  tier: Tier;\n  lostForgiveness: boolean;\n};\nexport function SmallReport({}: Props) {\n  const { t } = useTranslation();\n  const vw = document.body.clientWidth;\n  return (\n    <ScrollableTable \n      viewport={[vw, 532]}\n      borderColor=\"lightgray\"\n      xs={range(20, 1)}\n      ys={range(13, 0)}\n      xCaption={(props) => (\n        <XCaption {...props}>{t(\"Placement\")}</XCaption>\n      )}\n      yCaption={(props) => (\n        <YCaption {...props}>\n          {t(\"Kill/Assist Points\")}\n        </YCaption>\n      )}\n      xHeader={(x) => <XHeader placement={x} />}\n      yHeader={(y) => <YHeader killPoint={y} />}\n      cell={(x, y) => <Cell placement={x} killPoint={y} />}\n    />\n  );\n}\n","/** @jsxImportSource @emotion/react */\nimport { jsx } from \"@emotion/react/macro\";\nimport { useMediaQuery } from \"@react-hook/media-query\";\nimport { useTranslation } from \"react-i18next\";\nimport { Tier } from \"../data\";\nimport { isLarge } from \"../mediaQuery\";\nimport { calcRP } from \"../rpCalculator\";\nimport Breakdown from \"./Breakdown\";\nimport { Report as FullReport } from \"./FullReport\";\nimport { SmallReport } from \"./SmallReport\";\n\nexport function Output(props: {\n  placement: number;\n  killPoint: number;\n  tier: Tier;\n  lostForgiveness: boolean;\n}) {\n  const { t } = useTranslation();\n  const totalRP = calcRP(props);\n  const Report = useMediaQuery(isLarge)\n    ? FullReport\n    : SmallReport;\n  return (\n    <div css={{ marginTop: 24 }}>\n      <div>\n        {t(\"Earned RP\") + \": \"}\n        {totalRP}\n      </div>\n      <Breakdown {...props} />\n      <div css={{ marginTop: 24 }}>\n        <Report {...props} />\n      </div>\n    </div>\n  );\n}\n","import { IObservableValue } from \"mobx\";\nimport { useMemo } from \"react\";\n\nexport function useSyncedBox<T, Key extends keyof T>(\n  state: T,\n  accessor: Key\n) {\n  const newObservable = useMemo(\n    () =>\n      ({\n        get() {\n          return state[accessor];\n        },\n        set(value: T[Key]) {\n          state[accessor] = value;\n        },\n      } as any as IObservableValue<T[Key]>),\n    []\n  );\n  return newObservable;\n}\n","/** @jsxImportSource @emotion/react */\nimport { jsx } from \"@emotion/react/macro\";\nimport { createContext, useMemo } from \"react\";\nimport { Tier, Tiers } from \"../data\";\nimport { Header } from \"./Header\";\nimport { Inputs } from \"./Inputs\";\nimport { Output } from \"./Output\";\nimport { Observer } from \"mobx-react-lite\";\nimport { observable } from \"mobx\";\nimport { useSyncedBox } from \"../util/useConvertedObservable\";\nexport type PageState = {\n  placement: number;\n  killPoint: number;\n  tier: Tier;\n  lostForgiveness: boolean;\n};\nexport const PageStateContext = createContext(\n  null as any as PageState\n);\n\nexport default function App() {\n  const pageState = useMemo<PageState>(\n    () =>\n      observable({\n        placement: 20,\n        killPoint: 0,\n        tier: Tiers[0],\n        lostForgiveness: false,\n      }),\n    []\n  );\n  const placement = useSyncedBox(pageState, \"placement\");\n  const killPoint = useSyncedBox(pageState, \"killPoint\");\n  const tier = useSyncedBox(pageState, \"tier\");\n  const lostForgiveness = useSyncedBox(\n    pageState,\n    \"lostForgiveness\"\n  );\n\n  return (\n    <PageStateContext.Provider value={pageState}>\n      <Header />\n      <Inputs\n        placement={placement}\n        killPoint={killPoint}\n        tier={tier}\n        lostForgiveness={lostForgiveness}\n      />\n      <Observer>\n        {() => (\n          <Output\n            placement={placement.get()}\n            killPoint={killPoint.get()}\n            tier={tier.get()}\n            lostForgiveness={lostForgiveness.get()}\n          />\n        )}\n      </Observer>\n    </PageStateContext.Provider>\n  );\n}\n","import App from \"./component/App\";\n\nexport default function AppRoot() {\n  return <App/>;\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './i18n';\nimport App from './AppRoot';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}