{"version":3,"sources":["i18n.ts","component/OnOffToggle.tsx","component/RadioStyleSelector.tsx","data.ts","rpCalculator.ts","util/range.ts","variable/valueSetterPair.ts","component/LanguageSwitch.tsx","component/App.tsx","AppRoot.tsx","reportWebVitals.ts","index.tsx"],"names":["i18n","use","initReactI18next","LanguageDetector","init","resources","interpolation","escapeValue","OnOffToggle","label","current","value","setter","type","checked","onChange","RadioStyleSelectorOption","onClick","selected","css","borderWidth","borderStyle","borderColor","backgroundColor","marginLeft","RadioStyleSelector","list","selectedItem","select","map","item","Tiers","ENTRY_COST","Bronze","Silver","Gold","Platinum","Diamond","Master","calcRP","result","rp","placement","killPoint","rpPerKill","calcRPPerKill","Math","min","calcRPFromKill","calcRPFromPlacement","tier","lostForgiveness","max","range","from","to","arr","i","push","applyFnToVSPair","fn","reverseFn","setValue","a","Function","b","LanguageSwitch","useTranslation","languageList","currentLg","language","languageListInOrder","filter","lg","concat","position","top","right","index","code","name","href","lng","changeLanguage","Inputs","t","placementStr","v","String","str","parseInt","killPointStr","Output","totalRP","App","useState","AppRoot","reportWebVitals","onPerfEntry","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.02a8e587.chunk.js","sourcesContent":["import i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\nimport LanguageDetector from \"i18next-browser-languagedetector\";\nimport resources from \"./translations.json\";\n\ni18n\n  .use(initReactI18next)\n  .use(LanguageDetector)\n  .init({\n    resources,\n    interpolation: {\n      escapeValue: false,\n    },\n  });\n\nexport default i18n;\n","import { ValueSetterPair } from \"../variable/valueSetterPair\";\n\ntype Props = {\n  label: string;\n  current: ValueSetterPair<boolean>;\n};\nexport function OnOffToggle({\n  label,\n  current: [value, setter],\n}: Props) {\n  return (\n    <label>\n      {label}{\" \"}\n      <input\n        type=\"checkbox\"\n        checked={value}\n        onChange={() => setter(!value)}\n      />\n    </label>\n  );\n}\n","/** @jsxImportSource @emotion/react */\nimport {\n  jsx,\n} from \"@emotion/react/macro\";\nimport { ValueSetterPair } from \"../variable/valueSetterPair\";\n\ntype Props<Candidates extends readonly string[]> = {\n  label: string;\n  list: Candidates;\n  selected: ValueSetterPair<Candidates[number]>;\n};\ntype RadioStyleSelectorOptionProps = {\n  onClick: () => void;\n  selected: boolean;\n  label: string;\n};\n\nexport function RadioStyleSelectorOption({\n  onClick,\n  selected,\n  label,\n}: RadioStyleSelectorOptionProps) {\n  return (\n    <button\n      onClick={onClick}\n      css={{\n        borderWidth: 1,\n        borderStyle: \"solid\",\n        borderColor: selected ? \"#000000\" : \"#efefef\",\n        backgroundColor: \"#efefef\",\n        marginLeft: 0,\n      }}\n    >\n      {label}\n    </button>\n  );\n}\nexport function RadioStyleSelector<\n  Candidates extends readonly string[]\n>({ label, selected, list }: Props<Candidates>) {\n  const [selectedItem, select] = selected;\n  return (\n    <label>\n      {label}{\" \"}\n      <div>\n        {list.map((item) => (\n          <RadioStyleSelectorOption\n            onClick={() => {\n              select(item);\n            }}\n            selected={selectedItem === item}\n            label={item}\n            key={item}\n          />\n        ))}\n      </div>\n    </label>\n  );\n}\n","export function calcRPFromPlacement(\n  placement: number\n): number {\n  const RP: { [p: number]: number } = {\n    1: 125,\n    2: 95,\n    3: 70,\n    4: 55,\n    5: 45,\n    6: 30,\n    7: 20,\n    8: 20,\n    9: 10,\n    10: 10,\n    11: 5,\n    12: 5,\n    13: 5,\n  };\n  return RP[placement] ?? 0;\n}\nexport function calcRPPerKill(placement: number): number {\n  const RP: { [p: number]: number } = {\n    1: 15,\n    2: 11,\n    3: 8,\n    4: 5,\n    5: 5,\n    6: 1,\n    7: 1,\n    8: 1,\n    9: 1,\n    10: 1,\n  };\n  return (RP[placement] ?? 0) + 10;\n}\nexport const RP_FROM_KILL_CAP = 125;\nexport const Tiers = [\n  \"Bronze\",\n  \"Silver\",\n  \"Gold\",\n  \"Platinum\",\n  \"Diamond\",\n  \"Master\",\n  \"Apex Predator\",\n] as const;\nexport type Tier = typeof Tiers[number];\nexport const ENTRY_COST = {\n  Bronze: 0,\n  Silver: 12,\n  Gold: 24,\n  Platinum: 36,\n  Diamond: 48,\n  Master: 60,\n  \"Apex Predator\": 60,\n};\n","import { calcRPFromPlacement, calcRPPerKill, RP_FROM_KILL_CAP } from \"./data\";\n\nexport type Tier =\n  | \"Bronze\"\n  | \"Silver\"\n  | \"Gold\"\n  | \"Platinum\"\n  | \"Diamond\"\n  | \"Master\"\n  | \"Apex Predator\";\nexport const ENTRY_COST = {\n  Bronze: 0,\n  Silver: 12,\n  Gold: 24,\n  Platinum: 36,\n  Diamond: 48,\n  Master: 60,\n  \"Apex Predator\": 60,\n};\ntype Result = {\n  placement: number;\n  killPoint: number;\n  tier: Tier;\n  lostForgiveness: boolean;\n};\nexport function calcRP(result: Result): number {\n  const rp =\n    calcRPFromKill(result) +\n    calcRPFromPlacement(result.placement) -\n    ENTRY_COST[result.tier];\n  return result.lostForgiveness ? Math.max(0, rp) : rp;\n}\n\nexport function calcRPFromKill({\n  placement,\n  killPoint,\n}: Result): number {\n  const rpPerKill = calcRPPerKill(placement);\n  return Math.min(rpPerKill * killPoint, RP_FROM_KILL_CAP);\n}\n","export function range(from: number, to: number) {\n  const arr = [];\n  for (let i = from; i <= to; i++) arr.push(i);\n  return arr;\n}\n","import { Dispatch, SetStateAction } from \"react\";\n\nexport type ValueSetterPair<T> = [\n  T,\n  Dispatch<SetStateAction<T>>\n];\nexport function applyFnToVSPair<T, S>(\n  [value, setValue]: ValueSetterPair<T>,\n  fn: (a: T) => S,\n  reverseFn: (a: S) => T\n): ValueSetterPair<S> {\n  return [\n    fn(value),\n    (a: SetStateAction<S>) => {\n      if (a instanceof Function)\n        setValue((b) => reverseFn(a(fn(b))));\n      else setValue(reverseFn(a));\n    },\n  ];\n}","/** @jsxImportSource @emotion/react */\nimport { jsx } from \"@emotion/react/macro\";\nimport { useTranslation } from \"react-i18next\";\n\nexport default function LanguageSwitch() {\n  const { i18n } = useTranslation();\n  const changeLanguage = (lng: string) => {\n    i18n.changeLanguage(lng);\n  };\n  const languageList = [\n    [\"ja\", \"日本語\"],\n    [\"en\", \"English\"],\n  ];\n  const currentLg = i18n.language;\n  const languageListInOrder = languageList\n    .filter((lg) => lg[0] === currentLg)\n    .concat(\n      languageList.filter((lg) => lg[0] !== currentLg)\n    );\n  return (\n    <div\n      css={{\n        position: \"absolute\",\n        top: 24,\n        right: 24,\n      }}\n    >\n      {languageListInOrder.map(([code, name], index) => (\n        <>\n          {index !== 0 && \"/\"}\n          <a\n            href=\"#\"\n            onClick={() => {\n              changeLanguage(code);\n            }}\n          >\n            {name}\n          </a>\n        </>\n      ))}\n    </div>\n  );\n}\n","import { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { OnOffToggle } from \"./OnOffToggle\";\nimport { RadioStyleSelector } from \"./RadioStyleSelector\";\nimport { Tiers } from \"../data\";\nimport { calcRP, Tier } from \"../rpCalculator\";\nimport { range } from \"../util/range\";\nimport {\n  applyFnToVSPair,\n  ValueSetterPair,\n} from \"../variable/valueSetterPair\";\nimport LanguageSwitch from \"./LanguageSwitch\";\nfunction Inputs({\n  placement,\n  killPoint,\n  tier,\n  lostForgiveness,\n}: {\n  placement: ValueSetterPair<number>;\n  killPoint: ValueSetterPair<number>;\n  tier: ValueSetterPair<Tier>;\n  lostForgiveness: ValueSetterPair<boolean>;\n}) {\n  const { t } = useTranslation();\n  const placementStr = applyFnToVSPair(\n    placement,\n    (v) => String(v),\n    (str) => parseInt(str, 10)\n  );\n\n  const killPointStr = applyFnToVSPair(\n    killPoint,\n    (v) => String(v),\n    (str) => parseInt(str, 10)\n  );\n  return (\n    <div>\n      <div>\n        <RadioStyleSelector\n          selected={placementStr}\n          label={t(\"Placement\")}\n          list={range(1, 20).map((v) => String(v))}\n        />\n      </div>\n      <div>\n        <RadioStyleSelector\n          selected={killPointStr}\n          label={t(\"Kill/Assist Point\")}\n          list={range(0, 20).map((v) => String(v))}\n        />\n      </div>\n      <div>\n        <RadioStyleSelector\n          selected={tier}\n          label={t(\"Tier\")}\n          list={Tiers}\n        />\n      </div>\n      <div>\n        <OnOffToggle\n          current={lostForgiveness}\n          label={t(\"Lost Forgiveness\")}\n        />\n      </div>\n    </div>\n  );\n}\n\nfunction Output({\n  placement,\n  killPoint,\n  tier,\n  lostForgiveness,\n}: {\n  placement: number;\n  killPoint: number;\n  tier: Tier;\n  lostForgiveness: boolean;\n}) {\n  const { t } = useTranslation();\n  const totalRP = calcRP({\n    placement,\n    killPoint,\n    tier,\n    lostForgiveness,\n  });\n  return (\n    <div>\n      <label>\n        {t(\"Total RP\") + \": \"}\n        {totalRP}\n      </label>\n    </div>\n  );\n}\nexport default function App() {\n  const placement = useState<number>(1);\n  const killPoint = useState<number>(0);\n  const tier = useState<Tier>(Tiers[0]);\n  const lostForgiveness = useState<boolean>(false);\n  const { t } = useTranslation();\n  return (\n    <div>\n      <h1>{t(\"Apex Legends RP calculator\")}</h1>\n      <LanguageSwitch />\n      <Inputs\n        placement={placement}\n        killPoint={killPoint}\n        tier={tier}\n        lostForgiveness={lostForgiveness}\n      />\n      <Output\n        placement={placement[0]}\n        killPoint={killPoint[0]}\n        tier={tier[0]}\n        lostForgiveness={lostForgiveness[0]}\n      />\n    </div>\n  );\n}\n","import App from \"./component/App\";\n\n\nexport default function AppRoot() {\n  return <App/>;\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './i18n';\nimport App from './AppRoot';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}